[tox]
basepython = python3.11
envlist =
    isort-check
    black-check
    flake8-check
    pylint-check
    ruff-check
    mypy-check
    bandit-check
    safety-check
    py{311}
    codecov

[testenv]
deps =
    pytest
    pytest-cov
    typing
commands = pytest \
    --cov=swinging_door \
    --cov-config=tox.ini \
    --cov-append \
    swinging_door.py

[testenv:codecov]
deps =
    coverage
    codecov
setenv =
    CODECOV_TOKEN = {env:CODECOV_TOKEN}
commands =
    coverage html
    coverage report --include="*" --fail-under=100 -m
    coverage xml
    codecov -f coverage.xml

[testenv:coverage]
deps =
    coverage
commands =
    coverage html
    coverage report --include="*" --fail-under=100 -m
    coverage xml

[testenv:test]
deps = pytest
commands = pytest -sv swinging_door.py

[testenv:isort]
deps = isort
commands = isort \
    --settings tox.ini \
    --verbose \
    swinging_door.py docs/conf.py

[testenv:isort-check]
deps = isort
commands = isort \
    --settings tox.ini \
    --check \
    swinging_door.py docs/conf.py

[testenv:black]
deps = black
commands = black \
    --verbose \
    --line-length 79 \
    swinging_door.py docs/conf.py

[testenv:black-check]
deps = black
commands = black \
    --check \
    --line-length 79 \
    swinging_door.py docs/conf.py

[testenv:flake8]
deps = flake8
commands = flake8 \
    --config tox.ini \
    --verbose \
    swinging_door.py docs/conf.py

[testenv:flake8-check]
deps = flake8
commands = flake8 \
    --config tox.ini \
    swinging_door.py docs/conf.py

[testenv:pylint]
deps = pylint
commands = pylint \
    --rcfile=tox.ini \
    --verbose \
    swinging_door.py docs/conf.py

[testenv:pylint-check]
deps = pylint
commands = pylint \
    --rcfile=tox.ini \
    swinging_door.py docs/conf.py

[testenv:ruff]
deps = ruff
commands = ruff check \
    --verbose \
    swinging_door.py docs/conf.py

[testenv:ruff-check]
deps = ruff
commands = ruff check \
    swinging_door.py docs/conf.py

[testenv:mypy]
deps = mypy
commands = mypy \
    --config-file tox.ini \
    --verbose \
    swinging_door.py docs/conf.py

[testenv:mypy-check]
deps = mypy
commands = mypy \
    --config-file tox.ini \
    swinging_door.py docs/conf.py

[testenv:bandit]
deps = bandit
commands = bandit \
    --verbose \
    swinging_door.py docs/conf.py

[testenv:bandit-check]
deps = bandit
commands = bandit \
    --quiet \
    swinging_door.py docs/conf.py

[testenv:safety]
setenv =
    SAFETY_API_KEY = {env:SAFETY_API_KEY}
deps = safety
commands = safety scan --detailed-output

[testenv:safety-check]
setenv =
    SAFETY_API_KEY = {env:SAFETY_API_KEY}
deps = safety
commands = safety scan

[testenv:radon-mi]
deps = radon
commands = radon \
    mi \
    swinging_door.py docs/conf.py

[testenv:radon-cc]
deps = radon
commands = radon \
    cc \
    swinging_door.py docs/conf.py

[testenv:docs]
deps = Sphinx
commands =
    sphinx-build -b html -d docs/build/doctrees docs docs/build/html

[testenv:build]
skip_install = True
deps =
    build
    wheel
    docutils
    pygments
commands =
    python -c 'import shutil; (shutil.rmtree(p, ignore_errors=True) for p in ["build", "dist"]);'
    python -m build

[testenv:readme]
skip_install = True
deps = 
    readme-renderer
    readme_renderer[md]
commands = python -m readme_renderer README.rst

[testenv:upload]
skip_install = True
setenv =
    TWINE_USERNAME = {env:TWINE_USERNAME}
    TWINE_PASSWORD = {env:TWINE_PASSWORD}
deps = twine
commands = python -m twine upload dist/*

[pytest]
addopts = --doctest-modules

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
line_length=79

[flake8]
max-line-length = 79

[mypy]
ignore_missing_imports = True

[MESSAGES CONTROL]
disable=fixme, consider-using-f-string
